{"ast":null,"code":"import React from 'react';\nimport { useTransactionObservation_UNSTABLE } from 'recoil'; // See https://recoiljs.org/docs/guides/persistence for documentation on how to persist state in local storage using Recoil\n// This is what this PersistenceObserver allows us.\n\nexport default function PersistenceObserver() {\n  useTransactionObservation_UNSTABLE(({\n    atomValues,\n    atomInfo,\n    modifiedAtoms\n  }) => {\n    for (const modifiedAtom of modifiedAtoms) {\n      let value = JSON.stringify({\n        value: atomValues.get(modifiedAtom)\n      }); // console.log(\"Storing into local storage atom state:\", modifiedAtom, atomValues.get(modifiedAtom));\n\n      localStorage.setItem(modifiedAtom, value);\n    }\n  });\n  return /*#__PURE__*/React.createElement(React.Fragment, null);\n}","map":{"version":3,"sources":["/Users/Adam/Documents/physics-site/src/components/util/PersistenceObserver.js"],"names":["React","useTransactionObservation_UNSTABLE","PersistenceObserver","atomValues","atomInfo","modifiedAtoms","modifiedAtom","value","JSON","stringify","get","localStorage","setItem"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,kCAAT,QAAmD,QAAnD,C,CAEA;AACA;;AAEA,eAAe,SAASC,mBAAT,GAA+B;AAC1CD,EAAAA,kCAAkC,CAAC,CAAC;AAAEE,IAAAA,UAAF;AAAcC,IAAAA,QAAd;AAAwBC,IAAAA;AAAxB,GAAD,KAA6C;AAC5E,SAAK,MAAMC,YAAX,IAA2BD,aAA3B,EAA0C;AACtC,UAAIE,KAAK,GAAGC,IAAI,CAACC,SAAL,CAAe;AAAEF,QAAAA,KAAK,EAAEJ,UAAU,CAACO,GAAX,CAAeJ,YAAf;AAAT,OAAf,CAAZ,CADsC,CAEtC;;AACAK,MAAAA,YAAY,CAACC,OAAb,CAAqBN,YAArB,EAAmCC,KAAnC;AACH;AACJ,GANiC,CAAlC;AAOA,sBAAO,yCAAP;AACH","sourcesContent":["import React from 'react';\nimport { useTransactionObservation_UNSTABLE } from 'recoil';\n\n// See https://recoiljs.org/docs/guides/persistence for documentation on how to persist state in local storage using Recoil\n// This is what this PersistenceObserver allows us.\n\nexport default function PersistenceObserver() {\n    useTransactionObservation_UNSTABLE(({ atomValues, atomInfo, modifiedAtoms }) => {\n        for (const modifiedAtom of modifiedAtoms) {\n            let value = JSON.stringify({ value: atomValues.get(modifiedAtom) });\n            // console.log(\"Storing into local storage atom state:\", modifiedAtom, atomValues.get(modifiedAtom));\n            localStorage.setItem(modifiedAtom, value);\n        }\n    });\n    return <></>\n}\n"]},"metadata":{},"sourceType":"module"}