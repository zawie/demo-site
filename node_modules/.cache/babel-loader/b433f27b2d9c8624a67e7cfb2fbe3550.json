{"ast":null,"code":"var _jsxFileName = \"/Users/Adam/Documents/physics-site/src/components/control-panel/ControlPanel.js\";\nimport React from 'react';\nimport { Select, Tooltip, Input, Checkbox, Button } from \"antd\";\nimport { availableOperators } from '../../util/rules';\nimport { useRecoilState, useRecoilValue } from 'recoil';\nimport { rightDataState, leftDataState, rulesState } from '../../store/atoms';\nimport './ControlPanel.css';\nimport 'antd/dist/antd.css'; // or 'antd/dist/antd.less'\n\nconst {\n  Option\n} = Select;\n\nfunction replaceItemAtIndex(arr, index, newValue) {\n  return [...arr.slice(0, index), newValue, ...arr.slice(index + 1)];\n}\n\nexport default function ControlPanel() {\n  // // If the csv's are not uploaded, don't load panel\n  // if (leftColumns.length === 0 && rightColumns.length === 0) {\n  //     return (\n  //         <div className=\"ControlPanel\">\n  //             Upload the csv's silly!\n  //         </div>\n  //     )\n  // }\n  const {\n    columns: leftColumns\n  } = useRecoilValue(leftDataState);\n  const {\n    columns: rightColumns\n  } = useRecoilValue(rightDataState);\n  const [rules, setRules] = useRecoilState(rulesState);\n\n  const handleLeftChange = (value, i) => {\n    let newRules;\n\n    if (value === \"constant\") {\n      newRules = replaceItemAtIndex(rules, i, { ...rules[i],\n        with: {\n          type: value,\n          value: \"\"\n        }\n      });\n    } else {\n      newRules = replaceItemAtIndex(rules, i, { ...rules[i],\n        with: {\n          type: \"column\",\n          value: value\n        }\n      });\n    }\n\n    setRules(newRules);\n  };\n\n  const handleRightChange = (value, i) => {\n    const newRules = replaceItemAtIndex(rules, i, { ...rules[i],\n      by: value\n    });\n    setRules(newRules);\n  };\n\n  const handleOpChange = (value, i) => {\n    const newRules = replaceItemAtIndex(rules, i, { ...rules[i],\n      operator: value\n    });\n    setRules(newRules);\n  };\n\n  const handleCheck = (event, i) => {\n    let checked = event.target.checked;\n    const newRules = replaceItemAtIndex(rules, i, { ...rules[i],\n      enabled: checked\n    });\n    setRules(newRules);\n  };\n\n  const handleTextInput = (event, i) => {\n    let value = event.target.value;\n    const newRules = replaceItemAtIndex(rules, i, { ...rules[i],\n      with: { ...rules[i].with,\n        value: value\n      }\n    });\n    setRules(newRules);\n  };\n\n  const newSort = () => {\n    let by = rightColumns.length === 0 ? \"\" : rightColumns[0].key;\n    let newRule = {\n      \"type\": \"sort\",\n      \"enabled\": false,\n      \"by\": by,\n      \"operator\": \"equals\",\n      \"with\": {\n        type: \"constant\",\n        value: \"\"\n      }\n    };\n    setRules(oldRules => [...oldRules, newRule]);\n  };\n\n  const newFilter = () => {\n    let by = rightColumns.length === 0 ? \"\" : rightColumns[0].key;\n    let newRule = {\n      \"type\": \"filter\",\n      \"enabled\": false,\n      \"by\": by,\n      \"operator\": \"equals\",\n      \"with\": {\n        type: \"constant\",\n        value: \"\"\n      }\n    };\n    setRules(oldRules => [...oldRules, newRule]);\n  };\n\n  const deleteRule = i => {\n    setRules(oldRules => {\n      let newRules = oldRules.slice();\n      newRules.splice(i, 1);\n      return newRules;\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"ControlPanel\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 5\n    }\n  }, \"Sort\"), rules.filter(r => r.type === \"sort\").length > 0 ? rules.map((rule, i) => rule.type === \"sort\" && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"Rule\",\n    key: i,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: \"flex\",\n      justifyContent: \"space-between\",\n      width: 300\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Checkbox, {\n    defaultChecked: rule.enabled,\n    onChange: event => handleCheck(event, i),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 9\n    }\n  }, \"Enabled\"), /*#__PURE__*/React.createElement(Button, {\n    danger: true,\n    onClick: () => deleteRule(i),\n    type: \"text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 9\n    }\n  }, \"Delete\")), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: \"flex\",\n      flexDirection: \"column\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Tooltip, {\n    placement: \"top\",\n    title: \"Right column\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Select, {\n    value: rule.by,\n    size: \"small\",\n    style: {\n      width: 200\n    },\n    onChange: event => handleRightChange(event, i),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 13\n    }\n  }, rightColumns.map((col, i) => /*#__PURE__*/React.createElement(Option, {\n    key: i,\n    value: col.key,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 45\n    }\n  }, col.title)))), /*#__PURE__*/React.createElement(Tooltip, {\n    placement: \"top\",\n    title: \"Operator\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Select, {\n    value: rule.operator,\n    size: \"small\",\n    style: {\n      width: 100\n    },\n    onChange: value => handleOpChange(value, i),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 13\n    }\n  }, availableOperators.map((operator, i) => {\n    return /*#__PURE__*/React.createElement(Option, {\n      value: operator.value,\n      key: i,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 24\n      }\n    }, operator.display);\n  })))), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Tooltip, {\n    placement: \"top\",\n    title: \"Left column or constant\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Select, {\n    value: rule.with.type === \"column\" ? rule.with.value : \"constant\",\n    size: \"small\",\n    style: {\n      width: 200\n    },\n    onChange: value => handleLeftChange(value, i),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 13\n    }\n  }, leftColumns.map((col, i) => /*#__PURE__*/React.createElement(Option, {\n    key: i,\n    value: col.key,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 44\n    }\n  }, col.title)), /*#__PURE__*/React.createElement(Option, {\n    value: \"constant\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 15\n    }\n  }, \"Constant\"))), /*#__PURE__*/React.createElement(Tooltip, {\n    placement: \"top\",\n    title: \"Input for constant\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    disabled: rule.with.type === \"column\" ? true : false,\n    value: rule.with.type === \"column\" ? \"\" : rule.with.value,\n    allowClear: true,\n    style: {\n      width: 100\n    },\n    size: \"small\",\n    onChange: event => handleTextInput(event, i),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 13\n    }\n  })))))) : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 10\n    }\n  }, \"No filters added.\")), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 7\n    }\n  }, \"Filters are useful to hide data that don't meet certain criteria. Click the \\\"+\\\" sign to create one!\")), /*#__PURE__*/React.createElement(Button, {\n    shape: \"circle\",\n    onClick: newSort,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 46\n    }\n  }, \"+\")), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 5\n    }\n  }, \"Filter\"), rules.filter(r => r.type === 'filter').length > 0 ? rules.map((rule, i) => rule.type === \"filter\" && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"Rule\",\n    key: i,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: \"flex\",\n      justifyContent: \"space-between\",\n      width: 300\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Checkbox, {\n    defaultChecked: rule.enabled,\n    onChange: event => handleCheck(event, i),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 9\n    }\n  }, \"Enabled\"), /*#__PURE__*/React.createElement(Button, {\n    danger: true,\n    onClick: () => deleteRule(i),\n    type: \"text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 9\n    }\n  }, \"Delete\")), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: \"flex\",\n      flexDirection: \"column\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Tooltip, {\n    placement: \"top\",\n    title: \"Right column\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Select, {\n    value: rule.by,\n    size: \"small\",\n    style: {\n      width: 200\n    },\n    onChange: event => handleRightChange(event, i),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 13\n    }\n  }, rightColumns.map((col, i) => /*#__PURE__*/React.createElement(Option, {\n    key: i,\n    value: col.key,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 45\n    }\n  }, col.title)))), /*#__PURE__*/React.createElement(Tooltip, {\n    placement: \"top\",\n    title: \"Operator\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Select, {\n    value: rule.operator,\n    size: \"small\",\n    style: {\n      width: 100\n    },\n    onChange: value => handleOpChange(value, i),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 13\n    }\n  }, availableOperators.map((operator, i) => {\n    return /*#__PURE__*/React.createElement(Option, {\n      value: operator.value,\n      key: i,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 24\n      }\n    }, operator.display);\n  })))), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Tooltip, {\n    placement: \"top\",\n    title: \"Left column or constant\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Select, {\n    value: rule.with.type === \"column\" ? rule.with.value : \"constant\",\n    size: \"small\",\n    style: {\n      width: 200\n    },\n    onChange: value => handleLeftChange(value, i),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 13\n    }\n  }, leftColumns.map((col, i) => /*#__PURE__*/React.createElement(Option, {\n    key: i,\n    value: col.key,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 44\n    }\n  }, col.title)), /*#__PURE__*/React.createElement(Option, {\n    value: \"constant\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 15\n    }\n  }, \"Constant\"))), /*#__PURE__*/React.createElement(Tooltip, {\n    placement: \"top\",\n    title: \"Input for constant\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    disabled: rule.with.type === \"column\" ? true : false,\n    value: rule.with.type === \"column\" ? \"\" : rule.with.value,\n    allowClear: true,\n    style: {\n      width: 100\n    },\n    size: \"small\",\n    onChange: event => handleTextInput(event, i),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 13\n    }\n  })))))) : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 9\n    }\n  }, \"No sorts added.\")), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 277,\n      columnNumber: 7\n    }\n  }, \"Sorts are useful rank elements by some criteria. Click the \\\"+\\\" sign to create one!\")), /*#__PURE__*/React.createElement(Button, {\n    shape: \"circle\",\n    onClick: newFilter,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 48\n    }\n  }, \"+\")));\n}","map":{"version":3,"sources":["/Users/Adam/Documents/physics-site/src/components/control-panel/ControlPanel.js"],"names":["React","Select","Tooltip","Input","Checkbox","Button","availableOperators","useRecoilState","useRecoilValue","rightDataState","leftDataState","rulesState","Option","replaceItemAtIndex","arr","index","newValue","slice","ControlPanel","columns","leftColumns","rightColumns","rules","setRules","handleLeftChange","value","i","newRules","with","type","handleRightChange","by","handleOpChange","operator","handleCheck","event","checked","target","enabled","handleTextInput","newSort","length","key","newRule","oldRules","newFilter","deleteRule","splice","filter","r","map","rule","display","justifyContent","width","flexDirection","col","title"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Select, Tooltip, Input, Checkbox, Button } from \"antd\";\nimport { availableOperators } from '../../util/rules';\nimport { useRecoilState, useRecoilValue } from 'recoil';\nimport { rightDataState, leftDataState, rulesState } from '../../store/atoms';\n\nimport './ControlPanel.css';\nimport 'antd/dist/antd.css'; // or 'antd/dist/antd.less'\n\nconst { Option } = Select;\n\nfunction replaceItemAtIndex(arr, index, newValue) {\n  return [...arr.slice(0, index), newValue, ...arr.slice(index + 1)];\n}\n\nexport default function ControlPanel() {\n  \n  // // If the csv's are not uploaded, don't load panel\n  // if (leftColumns.length === 0 && rightColumns.length === 0) {\n  //     return (\n  //         <div className=\"ControlPanel\">\n  //             Upload the csv's silly!\n  //         </div>\n  //     )\n  // }\n\n  const {columns: leftColumns} = useRecoilValue(leftDataState);\n  const {columns: rightColumns} = useRecoilValue(rightDataState);\n  const [rules, setRules] = useRecoilState(rulesState);\n\n  const handleLeftChange = (value, i) => {\n    let newRules;\n    if (value === \"constant\") {\n      newRules = replaceItemAtIndex(rules, i, {\n        ...rules[i],\n        with: {\n          type: value,\n          value: \"\"\n        },\n      });\n    } else {\n      newRules = replaceItemAtIndex(rules, i, {\n        ...rules[i],\n        with: {\n          type: \"column\",\n          value: value\n        },\n      });\n    }\n    setRules(newRules);\n  }\n\n  const handleRightChange = (value, i) => {\n    const newRules = replaceItemAtIndex(rules, i, {\n      ...rules[i],\n      by: value,\n    });\n    setRules(newRules);\n  }\n\n  const handleOpChange = (value, i) => {\n    const newRules = replaceItemAtIndex(rules, i, {\n      ...rules[i],\n      operator: value,\n    });\n    setRules(newRules);\n  }\n\n  const handleCheck = (event, i) => {\n    let checked = event.target.checked;\n    const newRules = replaceItemAtIndex(rules, i, {\n      ...rules[i],\n      enabled: checked,\n    });\n    setRules(newRules);\n  }\n\n  const handleTextInput = (event, i) => {\n    let value = event.target.value;\n    const newRules = replaceItemAtIndex(rules, i, {\n      ...rules[i],\n      with: {\n        ...rules[i].with,\n        value: value\n      },\n    });\n    setRules(newRules);\n  }\n\n\n  const newSort = () => {\n    let by = rightColumns.length === 0 ? \"\" : rightColumns[0].key;\n    let newRule = {\n      \"type\": \"sort\",\n      \"enabled\": false,\n      \"by\": by,\n      \"operator\": \"equals\",\n      \"with\": {\n        type: \"constant\",\n        value: \"\",\n      }\n    }\n    setRules(oldRules => [...oldRules, newRule]);\n  }\n\n  const newFilter = () => {\n    let by = rightColumns.length === 0 ? \"\" : rightColumns[0].key;\n    let newRule = {\n      \"type\": \"filter\",\n      \"enabled\": false,\n      \"by\": by,\n      \"operator\": \"equals\",\n      \"with\": {\n        type: \"constant\",\n        value: \"\",\n      }\n    }\n    setRules(oldRules => [...oldRules, newRule])\n  }\n\n  const deleteRule = (i) => {\n    setRules(oldRules => {\n      let newRules = oldRules.slice();\n      newRules.splice(i, 1);\n      return newRules;\n    });\n  }\n\n  return (\n  <div className=\"ControlPanel\">\n    <h2>Sort</h2>\n    {rules.filter(r=>r.type ===\"sort\").length > 0 ? rules.map((rule, i) => (\n      rule.type === \"sort\" &&\n    <div className=\"Rule\" key={i}>\n      <div style={{ display: \"flex\", justifyContent:\"space-between\", width: 300}}>\n        <Checkbox defaultChecked={rule.enabled} onChange={(event) => handleCheck(event, i)}>Enabled</Checkbox>\n        <Button danger onClick={() => deleteRule(i)} type=\"text\">Delete</Button>\n      </div>\n      <div style={{ display: \"flex\", flexDirection: \"column\" }}>\n        <div>\n          {/* SELECT column for RIGHT side */}\n          <Tooltip placement=\"top\" title={\"Right column\"}>\n            <Select\n            value={rule.by}\n            size={\"small\"}\n            style={{ width: 200 }}\n            onChange={(event) => handleRightChange(event, i)}\n            >\n              {rightColumns.map((col, i) => <Option key={i} value={col.key}>{col.title}</Option>)}\n            </Select>\n          </Tooltip>\n\n          {/* SELECT operator */}\n\n          <Tooltip placement=\"top\" title={\"Operator\"}>\n            <Select\n              value={rule.operator}\n              size={\"small\"}\n              style={{ width: 100 }}\n              onChange={(value) => handleOpChange(value, i)}\n            >\n              {availableOperators.map((operator, i) => {\n                return <Option value={operator.value} key={i}>{operator.display}</Option> \n              })}\n            </Select>\n          </Tooltip>\n\n        </div>\n        <div>\n          {/* SELECT column for LEFT side */}\n          <Tooltip placement=\"top\" title={\"Left column or constant\"}>\n            <Select\n            value={rule.with.type === \"column\" ? rule.with.value : \"constant\"}\n            size={\"small\"}\n            style={{ width: 200 }}\n            onChange={(value) => handleLeftChange(value, i)}\n            >\n              {leftColumns.map((col, i) => <Option key={i} value={col.key}>{col.title}</Option>)}\n              <Option value={\"constant\"}>Constant</Option>\n            </Select>\n          </Tooltip>\n          {/* TEXT entry for constant comparator */}\n          <Tooltip placement=\"top\" title={\"Input for constant\"}>\n            <Input\n              disabled={rule.with.type === \"column\" ? true : false}\n              value={rule.with.type === \"column\" ? \"\" : rule.with.value}\n              allowClear\n              style={{ width: 100 }}\n              size={\"small\"}\n              onChange={(event) => handleTextInput(event, i)}\n            />\n          </Tooltip>\n        </div>\n      </div>\n    </div>)) \n    : \n    <>\n      <p><i>No filters added.</i></p>\n      <p>Filters are useful to hide data that don't meet certain criteria. Click the \"+\" sign to create one!</p>\n    </>\n    }\n\n    <Button shape='circle' onClick={newSort}><b>+</b></Button>\n\n    <br/>\n    <br/>\n\n    <h2>Filter</h2>\n\n    {rules.filter(r=>r.type==='filter').length > 0 ? rules.map((rule, i) => (\n      rule.type === \"filter\" &&\n    <div className=\"Rule\" key={i}>\n      <div style={{ display: \"flex\", justifyContent:\"space-between\", width: 300}}>\n        <Checkbox defaultChecked={rule.enabled} onChange={(event) => handleCheck(event, i)}>Enabled</Checkbox>\n        <Button danger onClick={() => deleteRule(i)} type=\"text\">Delete</Button>\n      </div>\n      <div style={{ display: \"flex\", flexDirection: \"column\" }}>\n        <div>\n          {/* SELECT column for RIGHT side */}\n          <Tooltip placement=\"top\" title={\"Right column\"}>\n            <Select\n            value={rule.by}\n            size={\"small\"}\n            style={{ width: 200 }}\n            onChange={(event) => handleRightChange(event, i)}\n            >\n              {rightColumns.map((col, i) => <Option key={i} value={col.key}>{col.title}</Option>)}\n            </Select>\n          </Tooltip>\n\n          {/* SELECT operator */}\n\n          <Tooltip placement=\"top\" title={\"Operator\"}>\n            <Select\n              value={rule.operator}\n              size={\"small\"}\n              style={{ width: 100 }}\n              onChange={(value) => handleOpChange(value, i)}\n            >\n              {availableOperators.map((operator, i) => {\n                return <Option value={operator.value} key={i}>{operator.display}</Option> \n              })}\n            </Select>\n          </Tooltip>\n\n        </div>\n        <div>\n          {/* SELECT column for LEFT side */}\n          <Tooltip placement=\"top\" title={\"Left column or constant\"}>\n            <Select\n            value={rule.with.type === \"column\" ? rule.with.value : \"constant\"}\n            size={\"small\"}\n            style={{ width: 200 }}\n            onChange={(value) => handleLeftChange(value, i)}\n            >\n              {leftColumns.map((col, i) => <Option key={i} value={col.key}>{col.title}</Option>)}\n              <Option value={\"constant\"}>Constant</Option>\n            </Select>\n          </Tooltip>\n          {/* TEXT entry for constant comparator */}\n          <Tooltip placement=\"top\" title={\"Input for constant\"}>\n            <Input\n              disabled={rule.with.type === \"column\" ? true : false}\n              value={rule.with.type === \"column\" ? \"\" : rule.with.value}\n              allowClear\n              style={{ width: 100 }}\n              size={\"small\"}\n              onChange={(event) => handleTextInput(event, i)}\n            />\n          </Tooltip>\n        </div>\n      </div>\n    </div>))\n    :\n    <>\n     <p><i>No sorts added.</i></p>\n      <p>Sorts are useful rank elements by some criteria. Click the \"+\" sign to create one!</p>\n    </>\n  }   \n\n    <Button shape='circle' onClick={newFilter}><b>+</b></Button>\n\n  </div>\n  )\n}"]},"metadata":{},"sourceType":"module"}