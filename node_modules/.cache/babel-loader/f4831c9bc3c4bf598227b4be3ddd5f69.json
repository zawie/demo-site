{"ast":null,"code":"var _jsxFileName = \"/Users/Adam/Documents/physics-site/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { RecoilRoot } from 'recoil';\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport PersistenceObserver from './components/util/PersistenceObserver';\n\nconst initializeState = ({\n  set\n}) => {\n  let allStoredKeys = Object.keys(localStorage);\n  console.log(\"Retrieved the following data from local storage:\", allStoredKeys);\n\n  for (const key of allStoredKeys) {\n    if (key !== undefined && key !== \"undefined\") {\n      let value = localStorage.getItem(key);\n\n      if (value) {\n        // console.log(key, JSON.parse(value).value);\n        set({\n          key: key\n        }, JSON.parse(value).value);\n      }\n    }\n  }\n};\n\nReactDOM.render( /*#__PURE__*/React.createElement(RecoilRoot, {\n  initializeState: initializeState // Comment this out if you don't want to use local storage\n  ,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(Router, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }\n}, /*#__PURE__*/React.createElement(PersistenceObserver, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 7\n  }\n}), /*#__PURE__*/React.createElement(App, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 7\n  }\n}))), document.getElementById('root'));","map":{"version":3,"sources":["/Users/Adam/Documents/physics-site/src/index.js"],"names":["React","ReactDOM","App","RecoilRoot","BrowserRouter","Router","PersistenceObserver","initializeState","set","allStoredKeys","Object","keys","localStorage","console","log","key","undefined","value","getItem","JSON","parse","render","document","getElementById"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,aAAP;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,SAASC,UAAT,QAA2B,QAA3B;AACA,SAASC,aAAa,IAAIC,MAA1B,QAAwC,kBAAxC;AACA,OAAOC,mBAAP,MAAgC,uCAAhC;;AAEA,MAAMC,eAAe,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAa;AACnC,MAAIC,aAAa,GAAGC,MAAM,CAACC,IAAP,CAAYC,YAAZ,CAApB;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAY,kDAAZ,EAAgEL,aAAhE;;AACA,OAAK,MAAMM,GAAX,IAAkBN,aAAlB,EAAiC;AAC/B,QAAIM,GAAG,KAAKC,SAAR,IAAqBD,GAAG,KAAK,WAAjC,EAA8C;AAC5C,UAAIE,KAAK,GAAGL,YAAY,CAACM,OAAb,CAAqBH,GAArB,CAAZ;;AACA,UAAIE,KAAJ,EAAW;AACT;AACAT,QAAAA,GAAG,CAAC;AAAEO,UAAAA,GAAG,EAAEA;AAAP,SAAD,EAAeI,IAAI,CAACC,KAAL,CAAWH,KAAX,EAAkBA,KAAjC,CAAH;AACD;AACF;AACF;AACF,CAZD;;AAcAhB,QAAQ,CAACoB,MAAT,eACE,oBAAC,UAAD;AACE,EAAA,eAAe,EAAEd,eADnB,CACoC;AADpC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAGE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACE,oBAAC,mBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF,eAEE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAFF,CAHF,CADF,EAUEe,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAVF","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { RecoilRoot } from 'recoil';\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport PersistenceObserver from './components/util/PersistenceObserver';\n\nconst initializeState = ({ set }) => {\n  let allStoredKeys = Object.keys(localStorage);\n  console.log(\"Retrieved the following data from local storage:\", allStoredKeys);\n  for (const key of allStoredKeys) {\n    if (key !== undefined && key !== \"undefined\") {\n      let value = localStorage.getItem(key);\n      if (value) {\n        // console.log(key, JSON.parse(value).value);\n        set({ key: key }, JSON.parse(value).value);\n      }\n    }\n  }\n}\n\nReactDOM.render(\n  <RecoilRoot\n    initializeState={initializeState} // Comment this out if you don't want to use local storage\n  >\n    <Router>\n      <PersistenceObserver />\n      <App />\n    </Router>\n  </RecoilRoot>\n  ,\n  document.getElementById('root')\n);\n"]},"metadata":{},"sourceType":"module"}